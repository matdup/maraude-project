webpackJsonp([0xb328853eacdf],{3880:function(e,o){e.exports={data:{challengeNode:{title:"Iterate with JavaScript For Loops",description:["You can run the same code multiple times by using a loop.",'The most common type of JavaScript loop is called a "<code>for loop</code>" because it runs "for" a specific number of times.',"For loops are declared with three optional expressions separated by semicolons:","<code>for ([initialization]; [condition]; [final-expression])</code>","The <code>initialization</code> statement is executed one time only before the loop starts. It is typically used to define and setup your loop variable.","The <code>condition</code> statement is evaluated at the beginning of every loop iteration and will continue as long as it evaluates to <code>true</code>. When <code>condition</code> is <code>false</code> at the start of the iteration, the loop will stop executing. This means if <code>condition</code> starts as <code>false</code>, your loop will never execute.","The <code>final-expression</code> is executed at the end of each loop iteration, prior to the next <code>condition</code> check and is usually used to increment or decrement your loop counter.","In the following example we initialize with <code>i = 0</code> and iterate while our condition <code>i &#60; 5</code> is true. We'll increment <code>i</code> by <code>1</code> in each loop iteration with <code>i++</code> as our <code>final-expression</code>.","<blockquote>var ourArray = [];<br>for (var i = 0; i &#60; 5; i++) {<br>&nbsp;&nbsp;ourArray.push(i);<br>}</blockquote>","<code>ourArray</code> will now contain <code>[0,1,2,3,4]</code>.","<hr>","Use a <code>for</code> loop to work to push the values 1 through 5 onto <code>myArray</code>."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-for-loops",blockName:"Basic JavaScript",tests:[{text:"You should be using a <code>for</code> loop for this.",testString:"assert(code.match(/for\\s*\\(/g).length > 1, 'You should be using a <code>for</code> loop for this.');"},{text:"<code>myArray</code> should equal <code>[1,2,3,4,5]</code>.",testString:"assert.deepEqual(myArray, [1,2,3,4,5], '<code>myArray</code> should equal <code>[1,2,3,4,5]</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// Example\nvar ourArray = [];\n\nfor (var i = 0; i < 5; i++) {\n  ourArray.push(i);\n}\n\n// Setup\nvar myArray = [];\n\n// Only change code below this line.\n\n",head:"",tail:'if (typeof myArray !== "undefined"){(function(){return myArray;})();}'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-odd-numbers-with-a-for-loop",id:"cf1111c1c11feddfaeb5bdef"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-for-loops"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-iterate-with-javascript-for-loops-1d6cfe86632bb8892990.js.map