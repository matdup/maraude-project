webpackJsonp([0x64cfc24e1d04],{3881:function(e,t){e.exports={data:{challengeNode:{title:"Iterate with JavaScript While Loops",description:["You can run the same code multiple times by using a loop.",'The first type of loop we will learn is called a "<code>while</code>" loop because it runs "while" a specified condition is true and stops once that condition is no longer true.',"<blockquote>var ourArray = [];<br>var i = 0;<br>while(i &#60; 5) {<br>&nbsp;&nbsp;ourArray.push(i);<br>&nbsp;&nbsp;i++;<br>}</blockquote>","Let's try getting a while loop to work by pushing values to an array.","<hr>","Push the numbers 0 through 4 to <code>myArray</code> using a <code>while</code> loop."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-while-loops",blockName:"Basic JavaScript",tests:[{text:"You should be using a <code>while</code> loop for this.",testString:"assert(code.match(/while/g), 'You should be using a <code>while</code> loop for this.');"},{text:"<code>myArray</code> should equal <code>[0,1,2,3,4]</code>.",testString:"assert.deepEqual(myArray, [0,1,2,3,4], '<code>myArray</code> should equal <code>[0,1,2,3,4]</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// Setup\nvar myArray = [];\n\n// Only change code below this line.\n\n",head:"",tail:'if(typeof myArray !== "undefined"){(function(){return myArray;})();}'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-for-loops",id:"cf1111c1c11feddfaeb1bdef"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-while-loops"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-iterate-with-javascript-while-loops-1aa09197b42c11dbe853.js.map