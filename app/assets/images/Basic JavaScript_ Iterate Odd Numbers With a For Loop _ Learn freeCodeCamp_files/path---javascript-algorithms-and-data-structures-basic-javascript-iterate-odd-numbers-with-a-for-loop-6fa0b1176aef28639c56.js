webpackJsonp([0xb1653e1d9ee1],{3877:function(e,o){e.exports={data:{challengeNode:{title:"Iterate Odd Numbers With a For Loop",description:["For loops don't have to iterate one at a time. By changing our <code>final-expression</code>, we can count by even numbers.","We'll start at <code>i = 0</code> and loop while <code>i &#60; 10</code>. We'll increment <code>i</code> by 2 each loop with <code>i += 2</code>.","<blockquote>var ourArray = [];<br>for (var i = 0; i &#60; 10; i += 2) {<br>&nbsp;&nbsp;ourArray.push(i);<br>}</blockquote>","<code>ourArray</code> will now contain <code>[0,2,4,6,8]</code>.","Let's change our <code>initialization</code> so we can count by odd numbers.","<hr>","Push the odd numbers from 1 through 9 to <code>myArray</code> using a <code>for</code> loop."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-odd-numbers-with-a-for-loop",blockName:"Basic JavaScript",tests:[{text:"You should be using a <code>for</code> loop for this.",testString:"assert(code.match(/for\\s*\\(/g).length > 1, 'You should be using a <code>for</code> loop for this.');"},{text:"<code>myArray</code> should equal <code>[1,3,5,7,9]</code>.",testString:"assert.deepEqual(myArray, [1,3,5,7,9], '<code>myArray</code> should equal <code>[1,3,5,7,9]</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// Example\nvar ourArray = [];\n\nfor (var i = 0; i < 10; i += 2) {\n  ourArray.push(i);\n}\n\n// Setup\nvar myArray = [];\n\n// Only change code below this line.\n\n",head:"",tail:'if(typeof myArray !== "undefined"){(function(){return myArray;})();}'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/count-backwards-with-a-for-loop",id:"56104e9e514f539506016a5c"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/iterate-odd-numbers-with-a-for-loop"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-iterate-odd-numbers-with-a-for-loop-6fa0b1176aef28639c56.js.map